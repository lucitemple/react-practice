{"version":3,"sources":["components/Navbar/Navbar.jsx","components/Profile/Profile.js","components/AddButton/AddButton.js","components/CatWeb/CatButtons.jsx","components/CatWeb/CatGallery.jsx","components/CatWeb/CatWebContainer.jsx","components/CopyCat/copyCatStyles.js","components/CopyCat/CopyCat.jsx","components/CopyCat/CopyCatContainer.jsx","components/App/App.jsx","index.jsx"],"names":["WebNavBar","Navbar","sticky","className","expand","bg","variant","Nav","Link","href","popeye","Profile","Container","id","Card","style","width","Body","Img","src","alt","Title","Subtitle","Text","ButtonCount","handleClick","Button","type","onClick","AddButton","useState","count","setCount","Row","currentCount","display","padding","color","categories","name","CatButtons","map","category","size","CatGallery","images","setImages","useEffect","fetch","getUrl","then","response","json","image","Image","url","CatWebContainer","setCategory","styles","divStyles","fontFamily","fontSize","backgroundColor","minHeight","minWidth","flexDirection","alignItems","justifyContent","imgStyles","marginTop","CopyCat","this","props","copying","toggleTape","value","handleChange","marginBottom","onChange","React","Component","CopyCatContainer","state","input","bind","e","setState","target","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a75ba034.chunk.js","sourcesContent":["import React from \"react\";\nimport { Nav, Navbar } from \"react-bootstrap\";\nimport \"./Navbar.css\";\n\nexport default function WebNavBar() {\n  return (\n    <Navbar\n      sticky=\"top\"\n      className=\"App-header\"\n      expand=\"lg\"\n      bg=\"dark\"\n      variant=\"dark\"\n    >\n      <Nav className=\"mr-auto\">\n        <Nav.Link href=\"#addbutton\">Add Button</Nav.Link>\n        <Nav.Link href=\"#popeye\">Popeye Profile</Nav.Link>\n        <Nav.Link href=\"#catweb\">Cat Web</Nav.Link>\n        <Nav.Link href=\"#copycat\">Copy Cat</Nav.Link>\n      </Nav>\n    </Navbar>\n  );\n}\n","import \"../Profile/Profile.css\";\nimport { Container, Card } from \"react-bootstrap\";\n\n/* Task instructions: Create a profile card for Popeye! Create a React component that will display all the data about Popeye.  Avatar should display as picture, twitterUsername should be a link to a Twitter account.  */\n\nconst popeye = {\n  name: \"Popeye the Sailor\",\n  location: \"Las Vegas\",\n  foodType: \"Spinach\",\n  age: 44,\n  likes: \"Sailing the seas of React!\",\n  twitterUsername: \"popeyeTheSailor\",\n  twitterLink: \"https://twitter.com/popeyethesailor\",\n  avatar:\n    \"https://www.denofgeek.com/wp-content/uploads/2020/05/Popeye-Spinach-1.jpg?resize=768%2C432\",\n};\n\nfunction Profile() {\n  return (\n    <Container className=\"container\" id=\"popeye\">\n      <h2>Profile</h2>\n      <Card style={{ width: \"26rem\" }}>\n        <Card.Body>\n          <Card.Img variant=\"top\" src={popeye.avatar} alt=\"Popeye Avatar\" />\n          <Card.Title className=\"title\">{popeye.name}</Card.Title>\n          <ul>\n            <li>\n              <Card.Subtitle className=\"properties col-sm-5\">\n                Location:\n              </Card.Subtitle>\n              <Card.Text className=\"details col-sm-7\">\n                {popeye.location}\n              </Card.Text>\n            </li>\n            <li>\n              <Card.Subtitle className=\"properties col-sm-5\">\n                Favourite food:\n              </Card.Subtitle>\n              <Card.Text className=\"details col-sm-7\">\n                {popeye.foodType}\n              </Card.Text>\n            </li>\n            <li>\n              <Card.Subtitle className=\"properties col-sm-5\">\n                Age:\n              </Card.Subtitle>\n              <Card.Text className=\"details col-sm-7\">{popeye.age}</Card.Text>\n            </li>\n            <li>\n              <Card.Subtitle className=\"properties col-sm-5\">\n                Likes:\n              </Card.Subtitle>\n              <Card.Text className=\"details col-sm-7\">{popeye.likes}</Card.Text>\n            </li>\n            <li>\n              <Card.Subtitle className=\"properties col-sm-5\">\n                Twitter:\n              </Card.Subtitle>\n              <Card.Link className=\"details col-sm-7\"\n                href={popeye.twitterLink}>\n                {popeye.twitterUsername}\n              </Card.Link>\n            </li>\n          </ul>\n        </Card.Body>\n      </Card>\n    </Container>\n  );\n}\n\nexport default Profile;\n","import React, {useState} from 'react';\nimport { Button, Container, Row } from \"react-bootstrap\";\n\nconst AddButton = () => {\n    const [count, setCount] = useState(0);\n\n    const increment = () => {\n      setCount (currentCount => currentCount + 1);\n    };\n    return (\n      <Container id=\"addbutton\">\n        <Row>\n          <ButtonCount handleClick={increment} />\n          <p style={{ display: \"inline-block\", padding: 10, color: \"white\" }}>\n            {count}\n          </p>\n        </Row>\n      </Container>\n    );\n};\n\nconst ButtonCount = ({handleClick}) => (\n        <Button type=\"button\" onClick={handleClick}>\n          Add\n        </Button>\n);\n\nexport default AddButton;","import { Button } from \"react-bootstrap\";\n\nconst categories = [\n  {\n    name: \"Hats\",\n    id: 1,\n  },\n  {\n    name: \"Boxes\",\n    id: 5,\n  },\n  {\n    name: \"Clothes\",\n    id: 15,\n  },\n];\n\nexport default function CatButtons({ handleClick }) {\n  return (\n    <div>\n      {categories.map((category) => (\n        <Button\n          size=\"lg\"\n          key={category.id}\n          onClick={() => handleClick(category.id)}\n        >\n          {category.name}\n        </Button>\n      ))}\n    </div>\n  );\n}\n","import React, { useEffect, useState } from \"react\";\nimport { Image, Row } from \"react-bootstrap/\";\nimport \"./catstyles.css\";\n\nconst api = \"d4cecf82-7a66-4503-8c49-1b7bc95dc5c5\";\nconst url = \"https://api.thecatapi.com/v1/images/search\";\nconst getUrl = (category) =>\n  `${url}?category_ids=${category}&api_key=${api}&limit=5`;\n\nexport default function CatGallery({ category }) {\n  const [images, setImages] = useState(null);\n\n  useEffect(() => {\n    fetch(getUrl(category))\n      .then((response) => response.json())\n      .then((images) => setImages(images));\n  }, [category]);\n\n  if (!images) {\n    return <h2>Loading!</h2>;\n  }\n  if (category == null) {\n    return <p>Please select a category for cat pics</p>;\n  }\n\n  return (\n    <Row className=\"cats\">\n      {images.map((image) => (\n        <Image src={image.url} key={image.id} alt=\"\" />\n      ))}\n    </Row>\n  );\n}\n","import React, { useState } from \"react\";\nimport { Container } from \"react-bootstrap\";\nimport CatButtons from \"./CatButtons\";\nimport CatGallery from \"./CatGallery\";\nimport \"../Profile/Profile.css\";\n\nexport default function CatWebContainer() {\n  const [category, setCategory] = useState(null);\n\n  const handleClick = (category) => {\n    setCategory(category);\n  };\n\n  return (\n    <Container className=\"App\" id=\"catweb\">\n      <h2>Cat Web</h2>\n      <CatButtons handleClick={handleClick} />\n      <CatGallery category={category} />\n    </Container>\n  );\n}\n","const fontFamily = \"Comic Sans MS, Lucida Handwriting, cursive\";\nconst fontSize = \"5vh\";\nconst backgroundColor = \"#282c34\";\nconst minHeight = \"100vh\";\nconst minWidth = 400;\nconst display = \"flex\";\nconst flexDirection = \"column\";\nconst alignItems = \"center\";\nconst justifyContent = \"center\";\nconst color = \"white\";\nconst marginTop = \"20px\";\nconst width = \"35%\";\n\nconst divStyles = {\n  fontFamily: fontFamily,\n  fontSize: fontSize,\n  color: color,\n  backgroundColor: backgroundColor,\n  minHeight: minHeight,\n  minWidth: minWidth,\n  display: display,\n  flexDirection: flexDirection,\n  alignItems: alignItems,\n  justifyContent: justifyContent,\n};\n\nconst imgStyles = {\n  marginTop: marginTop,\n  width: width,\n};\n\nexport const styles = {\n  divStyles: divStyles,\n  imgStyles: imgStyles,\n};\n","import React from \"react\";\nimport { styles } from \"./copyCatStyles.js\";\nimport PropTypes from \"prop-types\";\nimport { Container } from \"react-bootstrap\";\n\nconst images = {\n  copycat:\n    \"https://content.codecademy.com/courses/React/react_photo_copycat.png\",\n  quietcat:\n    \"https://content.codecademy.com/courses/React/react_photo_quietcat.png\",\n};\n\nexport class CopyCat extends React.Component {\n  render() {\n    const { copying, toggleTape, value, handleChange, name } = this.props;\n    /*     const copying = this.props.copying;\n    const toggleTape = this.props.toggleTape;\n    const value = this.props.value;\n    const handleChange = this.props.handleChange;\n    const name = this.props.name; */\n\n    return (\n      <Container style={styles.divStyles} id=\"copycat\">\n        <h1 style={{ marginBottom: 10 }}>Copy Cat {name || \"Tom\"}</h1>\n        <input type=\"text\" value={value} onChange={handleChange} />\n        <img\n          alt=\"cat\"\n          src={copying ? images.copycat : images.quietcat}\n          onClick={toggleTape}\n          style={styles.imgStyles}\n        />\n        <p>{copying && value}</p>\n      </Container>\n    );\n  }\n}\n\nCopyCat.propTypes = {\n  copying: PropTypes.bool.isRequired,\n  toggleTape: PropTypes.func.isRequired,\n  value: PropTypes.string.isRequired,\n  handleChange: PropTypes.func.isRequired,\n  name: PropTypes.string,\n};\n","import React from \"react\";\n//import ReactDOM from \"react-dom\";\nimport { CopyCat } from \"./CopyCat\";\n\nclass CopyCatContainer extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      copying: true,\n      input: \"\",\n      name: \"Ben\",\n    };\n\n    this.handleChange = this.handleChange.bind(this);\n    this.toggleTape = this.toggleTape.bind(this);\n  }\n\n  handleChange(e) {\n    this.setState({ input: e.target.value });\n  }\n\n  toggleTape() {\n    this.setState({ copying: !this.state.copying });\n  }\n\n  render() {\n    const copying = this.state.copying;\n    const toggleTape = this.toggleTape;\n    const value = this.state.input;\n    const handleChange = this.handleChange;\n    const name = this.name;\n\n    return (\n      <CopyCat\n        copying={copying}\n        toggleTape={toggleTape}\n        value={value}\n        handleChange={handleChange}\n        name={name}\n      />\n    );\n  }\n}\n\n//ReactDOM.render(<CopyCatContainer />, document.getElementById(\"app\"));\nexport default CopyCatContainer;\n","import React from \"react\";\nimport WebNavBar from \"../Navbar/Navbar.jsx\";\nimport Profile from \"../Profile/Profile.js\";\nimport AddButton from \"../AddButton/AddButton.js\";\nimport CatWebContainer from \"../CatWeb/CatWebContainer.jsx\";\nimport CopyCatContainer from \"../CopyCat/CopyCatContainer\";\nimport './App.css';\n\nexport default function App() {\n  return (\n    <div className=\"App\">\n      <WebNavBar />\n      <h1>React Practice Projects</h1>\n      <AddButton />\n      <Profile />\n      <CatWebContainer />\n      <CopyCatContainer />\n    </div>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App/App'\nimport './index.css';\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}