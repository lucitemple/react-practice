{"version":3,"sources":["components/Navbar/Navbar.jsx","components/Profile/AddButton.js","components/Profile/Profile.js","components/CopyCat/copyCatStyles.js","components/CopyCat/CopyCat.jsx","components/CopyCat/CopyCatContainer.jsx","components/App/App.jsx","index.jsx"],"names":["WebNavBar","Navbar","sticky","className","expand","bg","variant","Nav","Link","href","Button","handleClick","type","onClick","AddButton","useState","count","setCount","currentCount","style","display","padding","color","popeye","Profile","Container","id","Card","width","Body","Img","src","alt","Title","Subtitle","Text","styles","divStyles","fontFamily","fontSize","backgroundColor","minHeight","minWidth","flexDirection","alignItems","justifyContent","imgStyles","marginTop","images","CopyCat","this","props","copying","toggleTape","value","handleChange","name","marginBottom","onChange","React","Component","CopyCatContainer","state","input","bind","e","setState","target","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9f2a26ad.chunk.js","sourcesContent":["import React from \"react\";\nimport { Nav, Navbar } from \"react-bootstrap\";\nimport \"./Navbar.css\";\n\nexport default function WebNavBar() {\n  return (\n    <Navbar\n      sticky=\"top\"\n      className=\"App-header\"\n      expand=\"lg\"\n      bg=\"dark\"\n      variant=\"dark\"\n    >\n      <Nav className=\"mr-auto\">\n        <Nav.Link href=\"#popeye\">Popeye Profile</Nav.Link>\n        <Nav.Link href=\"#catweb\">Cat Web</Nav.Link>\n        <Nav.Link href=\"#copycat\">Copy Cat</Nav.Link>\n      </Nav>\n    </Navbar>\n  );\n}\n","import React, {useState} from 'react';\n\nconst AddButton = () => {\n    const [count, setCount] = useState(0);\n\n    const increment = () => {\n      setCount (currentCount => currentCount + 1);\n    };\n    return (\n      <div>\n        <Button handleClick={increment} />\n        <p style={{ display: \"inline-block\", padding: 10, color: \"white\", }}>{count}</p>\n      </div>\n    );\n};\n\nconst Button = ({handleClick}) => (\n        <button type=\"button\" onClick={handleClick}>\n          Add\n        </button>\n);\n\nexport default AddButton;","import \"../Profile/Profile.css\";\nimport AddButton from \"./AddButton\";\nimport { Container, Card } from \"react-bootstrap\";\n\n/* Task instructions: Create a profile card for Popeye! Create a React component that will display all the data about Popeye.  Avatar should display as picture, twitterUsername should be a link to a Twitter account.  */\n\nconst popeye = {\n  name: \"Popeye the Sailor\",\n  location: \"Las Vegas\",\n  foodType: \"Spinach\",\n  age: 44,\n  likes: \"Sailing the seas of React!\",\n  twitterUsername: \"popeyeTheSailor\",\n  twitterLink: \"https://twitter.com/popeyethesailor\",\n  avatar:\n    \"https://www.denofgeek.com/wp-content/uploads/2020/05/Popeye-Spinach-1.jpg?resize=768%2C432\",\n};\n\nfunction Profile() {\n  return (\n    <Container className=\"container\" id=\"popeye\">\n      <h2>Profile</h2>\n      <Card style={{ width: \"26rem\" }}>\n        <Card.Body>\n          <Card.Img variant=\"top\" src={popeye.avatar} alt=\"Popeye Avatar\" />\n          <Card.Title className=\"title\">{popeye.name}</Card.Title>\n          <ul>\n            <li>\n              <Card.Subtitle className=\"properties col-sm-5\">\n                Location:\n              </Card.Subtitle>\n              <Card.Text className=\"details col-sm-7\">\n                {popeye.location}\n              </Card.Text>\n            </li>\n            <li>\n              <Card.Subtitle className=\"properties col-sm-5\">\n                Favourite food:\n              </Card.Subtitle>\n              <Card.Text className=\"details col-sm-7\">\n                {popeye.foodType}\n              </Card.Text>\n            </li>\n            <li>\n              <Card.Subtitle className=\"properties col-sm-5\">\n                Age:\n              </Card.Subtitle>\n              <Card.Text className=\"details col-sm-7\">{popeye.age}</Card.Text>\n            </li>\n            <li>\n              <Card.Subtitle className=\"properties col-sm-5\">\n                Likes:\n              </Card.Subtitle>\n              <Card.Text className=\"details col-sm-7\">{popeye.likes}</Card.Text>\n            </li>\n            <li>\n              <Card.Subtitle className=\"properties col-sm-5\">\n                Twitter:\n              </Card.Subtitle>\n              <Card.Link className=\"details col-sm-7\"\n                href={popeye.twitterLink}>\n                {popeye.twitterUsername}\n              </Card.Link>\n            </li>\n          </ul>\n        </Card.Body>\n      </Card>\n      <AddButton />\n    </Container>\n  );\n}\n\nexport default Profile;\n","const fontFamily = \"Comic Sans MS, Lucida Handwriting, cursive\";\nconst fontSize = \"5vh\";\nconst backgroundColor = \"#282c34\";\nconst minHeight = \"100vh\";\nconst minWidth = 400;\nconst display = \"flex\";\nconst flexDirection = \"column\";\nconst alignItems = \"center\";\nconst justifyContent = \"center\";\nconst color = \"white\";\nconst marginTop = \"20px\";\nconst width = \"35%\";\n\nconst divStyles = {\n  fontFamily: fontFamily,\n  fontSize: fontSize,\n  color: color,\n  backgroundColor: backgroundColor,\n  minHeight: minHeight,\n  minWidth: minWidth,\n  display: display,\n  flexDirection: flexDirection,\n  alignItems: alignItems,\n  justifyContent: justifyContent,\n};\n\nconst imgStyles = {\n  marginTop: marginTop,\n  width: width,\n};\n\nexport const styles = {\n  divStyles: divStyles,\n  imgStyles: imgStyles,\n};\n","import React from \"react\";\nimport { styles } from \"./copyCatStyles.js\";\nimport PropTypes from \"prop-types\";\nimport { Container } from \"react-bootstrap\";\n\nconst images = {\n  copycat:\n    \"https://content.codecademy.com/courses/React/react_photo_copycat.png\",\n  quietcat:\n    \"https://content.codecademy.com/courses/React/react_photo_quietcat.png\",\n};\n\nexport class CopyCat extends React.Component {\n  render() {\n    const { copying, toggleTape, value, handleChange, name } = this.props;\n    /*     const copying = this.props.copying;\n    const toggleTape = this.props.toggleTape;\n    const value = this.props.value;\n    const handleChange = this.props.handleChange;\n    const name = this.props.name; */\n\n    return (\n      <Container style={styles.divStyles} id=\"copycat\">\n        <h1 style={{ marginBottom: 10 }}>Copy Cat {name || \"Tom\"}</h1>\n        <input type=\"text\" value={value} onChange={handleChange} />\n        <img\n          alt=\"cat\"\n          src={copying ? images.copycat : images.quietcat}\n          onClick={toggleTape}\n          style={styles.imgStyles}\n        />\n        <p>{copying && value}</p>\n      </Container>\n    );\n  }\n}\n\nCopyCat.propTypes = {\n  copying: PropTypes.bool.isRequired,\n  toggleTape: PropTypes.func.isRequired,\n  value: PropTypes.string.isRequired,\n  handleChange: PropTypes.func.isRequired,\n  name: PropTypes.string,\n};\n","import React from \"react\";\n//import ReactDOM from \"react-dom\";\nimport { CopyCat } from \"./CopyCat\";\n\nclass CopyCatContainer extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      copying: true,\n      input: \"\",\n      name: \"Ben\",\n    };\n\n    this.handleChange = this.handleChange.bind(this);\n    this.toggleTape = this.toggleTape.bind(this);\n  }\n\n  handleChange(e) {\n    this.setState({ input: e.target.value });\n  }\n\n  toggleTape() {\n    this.setState({ copying: !this.state.copying });\n  }\n\n  render() {\n    const copying = this.state.copying;\n    const toggleTape = this.toggleTape;\n    const value = this.state.input;\n    const handleChange = this.handleChange;\n    const name = this.name;\n\n    return (\n      <CopyCat\n        copying={copying}\n        toggleTape={toggleTape}\n        value={value}\n        handleChange={handleChange}\n        name={name}\n      />\n    );\n  }\n}\n\n//ReactDOM.render(<CopyCatContainer />, document.getElementById(\"app\"));\nexport default CopyCatContainer;\n","import React from \"react\";\nimport WebNavBar from \"../Navbar/Navbar.jsx\";\nimport Profile from \"../Profile/Profile.js\";\nimport CopyCatContainer from \"../CopyCat/CopyCatContainer\";\nimport './App.css';\n\nexport default function App() {\n  return (\n    <div className=\"App\">\n      <WebNavBar />\n      <h1>React Practice Projects</h1>\n      <Profile />\n      <CopyCatContainer />\n    </div>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App/App'\nimport './index.css';\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}